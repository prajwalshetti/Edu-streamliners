services:
  # MongoDB Database
  - type: pserv
    name: edustream-mongo
    env: docker
    dockerfilePath: ./Dockerfile.mongo
    plan: starter
    disk:
      name: mongo-data
      mountPath: /data/db
      sizeGB: 1
    envVars:
      - key: MONGO_INITDB_DATABASE
        value: edustream

  # Backend Service
  - type: web
    name: edustream-backend
    env: docker
    dockerfilePath: ./Backendtemplate/Dockerfile
    plan: starter
    buildCommand: ""
    startCommand: ""
    healthCheckPath: /api/v1/health
    envVars:
      - key: PORT
        value: 8080
      - key: MONGODB_URI
        fromService:
          type: pserv
          name: edustream-mongo
          property: connectionString
      - key: NODE_ENV
        value: production
      # Add other environment variables from your .env file here
      # - key: JWT_SECRET
      #   generateValue: true
      # - key: API_KEY
      #   value: your-api-key

  # Frontend Service
  - type: web
    name: edustream-frontend
    env: docker
    dockerfilePath: ./Frontend/Dockerfile
    plan: starter
    buildCommand: ""
    startCommand: ""
    buildArgs:
      - key: VITE_BASE_URL
        fromService:
          type: web
          name: edustream-backend
          property: host
    envVars:
      - key: VITE_BASE_URL
        fromService:
          type: web
          name: edustream-backend
          property: host

databases:
  # Alternative: Use Render's managed MongoDB (recommended for production)
  # - name: edustream-db
  #   databaseName: edustream
  #   user: edustream_user
  #   plan: starter